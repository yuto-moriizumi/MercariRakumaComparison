[{"/usr/src/src/views/MyPage.tsx":"1","/usr/src/src/App.tsx":"2","/usr/src/src/components/ProtectedRoute.jsx":"3","/usr/src/src/views/Index.tsx":"4","/usr/src/src/components/LoginButton.tsx":"5","/usr/src/src/reportWebVitals.ts":"6","/usr/src/src/components/LogoutButton.tsx":"7","/usr/src/src/index.tsx":"8"},{"size":10024,"mtime":1611596365568,"results":"9","hashOfConfig":"10"},{"size":2025,"mtime":1611579055895,"results":"11","hashOfConfig":"10"},{"size":802,"mtime":1610954711219,"results":"12","hashOfConfig":"10"},{"size":2502,"mtime":1611596387293,"results":"13","hashOfConfig":"10"},{"size":508,"mtime":1611507108069,"results":"14","hashOfConfig":"10"},{"size":425,"mtime":1610293944408,"results":"15","hashOfConfig":"10"},{"size":607,"mtime":1611507108070,"results":"16","hashOfConfig":"10"},{"size":855,"mtime":1611161219701,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cgbudw",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/usr/src/src/views/MyPage.tsx",[],"/usr/src/src/App.tsx",[],"/usr/src/src/components/ProtectedRoute.jsx",[],"/usr/src/src/views/Index.tsx",[],"/usr/src/src/components/LoginButton.tsx",[],"/usr/src/src/reportWebVitals.ts",[],"/usr/src/src/components/LogoutButton.tsx",[],"/usr/src/src/index.tsx",["35"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"rc-rate/assets/index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./components/Auth0ProviderWithHistory\";\nimport enableMock from \"./utils/mockApi\";\n\n// enableMock();\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Auth0ProviderWithHistory>\n        <App />\n      </Auth0ProviderWithHistory>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",{"ruleId":"36","severity":1,"message":"37","line":9,"column":8,"nodeType":"38","messageId":"39","endLine":9,"endColumn":18},"@typescript-eslint/no-unused-vars","'enableMock' is defined but never used.","Identifier","unusedVar"]